import { TNativeAudioNode, TNativeOfflineAudioContext } from 'standardized-audio-context/build/es2019/types';
import { IAudioNode } from 'standardized-audio-context/build/es2019/interfaces/audio-node';
import { IMinimalOfflineAudioContext } from 'standardized-audio-context/build/es2019/interfaces/minimal-offline-audio-context';
import { IOfflineAudioContext } from 'standardized-audio-context/build/es2019/interfaces/offline-audio-context';
export interface IAudioNodeRenderer<T extends IMinimalOfflineAudioContext | IOfflineAudioContext, U extends IAudioNode<T>> {
    render(proxy: U, nativeOfflineAudioContext: TNativeOfflineAudioContext, trace: readonly IAudioNode<T>[]): Promise<TNativeAudioNode>;
}
//# sourceMappingURL=audio-node-renderer.d.ts.map