import { TInvalidStateErrorFactory } from 'standardized-audio-context/build/es2019/types/invalid-state-error-factory';
import { TMinimalAudioContextConstructor } from 'standardized-audio-context/build/es2019/types/minimal-audio-context-constructor';
import { TMinimalBaseAudioContextConstructor } from 'standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor';
import { TNativeAudioContextConstructor } from 'standardized-audio-context/build/es2019/types/native-audio-context-constructor';
import { TNotSupportedErrorFactory } from 'standardized-audio-context/build/es2019/types/not-supported-error-factory';
import { TUnknownErrorFactory } from 'standardized-audio-context/build/es2019/types/unknown-error-factory';
export declare type TMinimalAudioContextConstructorFactory = (createInvalidStateError: TInvalidStateErrorFactory, createNotSupportedError: TNotSupportedErrorFactory, createUnknownError: TUnknownErrorFactory, minimalBaseAudioContextConstructor: TMinimalBaseAudioContextConstructor, nativeAudioContextConstructor: null | TNativeAudioContextConstructor) => TMinimalAudioContextConstructor;
//# sourceMappingURL=minimal-audio-context-constructor-factory.d.ts.map