import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from 'standardized-audio-context/build/es2019/interfaces';
import { TActiveInputConnection } from 'standardized-audio-context/build/es2019/types/active-input-connection';
import { TContext } from 'standardized-audio-context/build/es2019/types/context';
import { TOutputConnection } from 'standardized-audio-context/build/es2019/types/output-connection';
import { TPassiveAudioNodeInputConnection } from 'standardized-audio-context/build/es2019/types/passive-audio-node-input-connection';
export declare type TAudioNodeConnections<T extends TContext> = Readonly<{
    activeInputs: Set<TActiveInputConnection<T>>[];
    outputs: Set<TOutputConnection<T>>;
    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioNodeInputConnection>>;
    renderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioNodeRenderer<T, IAudioNode<T>> : null;
}>;
//# sourceMappingURL=audio-node-connections.d.ts.map