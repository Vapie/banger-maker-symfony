import { TAudioNodeConstructor } from 'standardized-audio-context/build/es2019/types/audio-node-constructor';
import { TGetNativeContextFunction } from 'standardized-audio-context/build/es2019/types/get-native-context-function';
import { TIIRFilterNodeConstructor } from 'standardized-audio-context/build/es2019/types/iir-filter-node-constructor';
import { TIIRFilterNodeRendererFactory } from 'standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory';
import { TIsNativeOfflineAudioContextFunction } from 'standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function';
import { TNativeIIRFilterNodeFactory } from 'standardized-audio-context/build/es2019/types/native-iir-filter-node-factory';
import { TSetAudioNodeTailTimeFunction } from 'standardized-audio-context/build/es2019/types/set-audio-node-tail-time-function';
export declare type TIIRFilterNodeConstructorFactory = (audioNodeConstructor: TAudioNodeConstructor, createNativeIIRFilterNode: TNativeIIRFilterNodeFactory, createIIRFilterNodeRenderer: TIIRFilterNodeRendererFactory, getNativeContext: TGetNativeContextFunction, isNativeOfflineAudioContext: TIsNativeOfflineAudioContextFunction, setAudioNodeTailTime: TSetAudioNodeTailTimeFunction) => TIIRFilterNodeConstructor;
//# sourceMappingURL=iir-filter-node-constructor-factory.d.ts.map