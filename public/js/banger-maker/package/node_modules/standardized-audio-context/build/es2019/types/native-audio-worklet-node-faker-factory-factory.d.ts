import { TConnectMultipleOutputsFunction } from 'standardized-audio-context/build/es2019/types/connect-multiple-outputs-function';
import { TDisconnectMultipleOutputsFunction } from 'standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-function';
import { TExposeCurrentFrameAndCurrentTimeFunction } from 'standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-function';
import { TGetActiveAudioWorkletNodeInputsFunction } from 'standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-function';
import { TIndexSizeErrorFactory } from 'standardized-audio-context/build/es2019/types/index-size-error-factory';
import { TInvalidStateErrorFactory } from 'standardized-audio-context/build/es2019/types/invalid-state-error-factory';
import { TMonitorConnectionsFunction } from 'standardized-audio-context/build/es2019/types/monitor-connections-function';
import { TNativeAudioWorkletNodeFakerFactory } from 'standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory';
import { TNativeChannelMergerNodeFactory } from 'standardized-audio-context/build/es2019/types/native-channel-merger-node-factory';
import { TNativeChannelSplitterNodeFactory } from 'standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory';
import { TNativeConstantSourceNodeFactory } from 'standardized-audio-context/build/es2019/types/native-constant-source-node-factory';
import { TNativeGainNodeFactory } from 'standardized-audio-context/build/es2019/types/native-gain-node-factory';
import { TNativeScriptProcessorNodeFactory } from 'standardized-audio-context/build/es2019/types/native-script-processor-node-factory';
import { TNotSupportedErrorFactory } from 'standardized-audio-context/build/es2019/types/not-supported-error-factory';
export declare type TNativeAudioWorkletNodeFakerFactoryFactory = (connectMultipleOutputs: TConnectMultipleOutputsFunction, createIndexSizeError: TIndexSizeErrorFactory, createInvalidStateError: TInvalidStateErrorFactory, createNativeChannelMergerNode: TNativeChannelMergerNodeFactory, createNativeChannelSplitterNode: TNativeChannelSplitterNodeFactory, createNativeConstantSourceNode: TNativeConstantSourceNodeFactory, createNativeGainNode: TNativeGainNodeFactory, createNativeScriptProcessorNode: TNativeScriptProcessorNodeFactory, createNotSupportedError: TNotSupportedErrorFactory, disconnectMultipleOutputs: TDisconnectMultipleOutputsFunction, exposeCurrentFrameAndCurrentTime: TExposeCurrentFrameAndCurrentTimeFunction, getActiveAudioWorkletNodeInputs: TGetActiveAudioWorkletNodeInputsFunction, monitorConnections: TMonitorConnectionsFunction) => TNativeAudioWorkletNodeFakerFactory;
//# sourceMappingURL=native-audio-worklet-node-faker-factory-factory.d.ts.map