import { TAudioDestinationNodeConstructor } from 'standardized-audio-context/build/es2019/types/audio-destination-node-constructor';
import { TAudioDestinationNodeRendererFactory } from 'standardized-audio-context/build/es2019/types/audio-destination-node-renderer-factory';
import { TAudioNodeConstructor } from 'standardized-audio-context/build/es2019/types/audio-node-constructor';
import { TGetNativeContextFunction } from 'standardized-audio-context/build/es2019/types/get-native-context-function';
import { TIndexSizeErrorFactory } from 'standardized-audio-context/build/es2019/types/index-size-error-factory';
import { TInvalidStateErrorFactory } from 'standardized-audio-context/build/es2019/types/invalid-state-error-factory';
import { TIsNativeOfflineAudioContextFunction } from 'standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function';
import { TNativeAudioDestinationNodeFactory } from 'standardized-audio-context/build/es2019/types/native-audio-destination-node-factory';
import { TRenderInputsOfAudioNodeFunction } from 'standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-function';
export declare type TAudioDestinationNodeConstructorFactory = (audioNodeConstructor: TAudioNodeConstructor, createAudioDestinationNodeRenderer: TAudioDestinationNodeRendererFactory, createIndexSizeError: TIndexSizeErrorFactory, createInvalidStateError: TInvalidStateErrorFactory, createNativeAudioDestinationNode: TNativeAudioDestinationNodeFactory, getNativeContext: TGetNativeContextFunction, isNativeOfflineAudioContext: TIsNativeOfflineAudioContextFunction, renderInputsOfAudioNode: TRenderInputsOfAudioNodeFunction) => TAudioDestinationNodeConstructor;
//# sourceMappingURL=audio-destination-node-constructor-factory.d.ts.map