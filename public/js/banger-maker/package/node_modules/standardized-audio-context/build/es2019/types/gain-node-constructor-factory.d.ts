import { TAudioNodeConstructor } from 'standardized-audio-context/build/es2019/types/audio-node-constructor';
import { TAudioParamFactory } from 'standardized-audio-context/build/es2019/types/audio-param-factory';
import { TGainNodeConstructor } from 'standardized-audio-context/build/es2019/types/gain-node-constructor';
import { TGainNodeRendererFactory } from 'standardized-audio-context/build/es2019/types/gain-node-renderer-factory';
import { TGetNativeContextFunction } from 'standardized-audio-context/build/es2019/types/get-native-context-function';
import { TIsNativeOfflineAudioContextFunction } from 'standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function';
import { TNativeGainNodeFactory } from 'standardized-audio-context/build/es2019/types/native-gain-node-factory';
export declare type TGainNodeConstructorFactory = (audioNodeConstructor: TAudioNodeConstructor, createAudioParam: TAudioParamFactory, createGainNodeRenderer: TGainNodeRendererFactory, createNativeGainNode: TNativeGainNodeFactory, getNativeContext: TGetNativeContextFunction, isNativeOfflineAudioContext: TIsNativeOfflineAudioContextFunction) => TGainNodeConstructor;
//# sourceMappingURL=gain-node-constructor-factory.d.ts.map